<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd

        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 加载属性文件只能加载一次-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 依赖spring容器完成数据源DataSource的创建 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${druid.driver}"/>
        <property name="url" value="${druid.url}"/>
        <property name="username" value="${druid.username}"/>
        <property name="password" value="${druid.password}"/>

        <property name="initialSize" value="${druid.pool.init}"/>
        <property name="minIdle" value="${druid.pool.minIdle}"/>
        <property name="maxActive" value="${druid.pool.maxActive}"/>
        <property name="maxWait" value="${druid.pool.timeout}"/>
    </bean>

    <!-- 依赖spring容器完成SqlSessionFactory的创建 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置mapper映射文件的路径 -->
        <property name="mapperLocations" value="classpath:mappers/*Mapper.xml"/>
        <!-- 配置需要起别名的实体类的包  -->
        <property name="typeAliasesPackage" value="com.cn.qfedu.pojo"/>
        <!--加载mybatis的主配置文件 -->
        <!--        <property name="configLocation" value="classpath:mybatisConfig.xml"/>-->

    </bean>

    <!-- 加载dao包中的所有的接口，通过sqlSessionFactory获取sqlSession对象，
       然后创建所有的dao接口对象，并存储在spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 获取sqlsession -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 扫描dao包 -->
        <property name="basePackage" value="com.cn.qfedu.mapper"/>
    </bean>
</beans>
